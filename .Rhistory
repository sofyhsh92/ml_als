alsfrs <- na.omit(alsfrs)
length(unique(alsfrs$subject_id))
#6506 patients
colnames(alsfrs) <- c("subject_id", "Q1", "Q2", "Q3", "Q4", "Q5", "Q6", "Q7", "Q8", "Q9", "Q10", "ALSFRS_Delta")
alsfrs <- alsfrs %>%
group_by(subject_id) %>%
mutate(Q1_min = min(Q1), Q1_max = max(Q1), Q2_min = min(Q2), Q2_max = max(Q2), Q3_min = min(Q3), Q3_max = max(Q3), Q4_min = min(Q4), Q4_max = max(Q4), Q5_min = min(Q5), Q5_max = max(Q5), Q6_min = min(Q6), Q6_max = max(Q6), Q7_min = min(Q7), Q7_max = max(Q7), Q8_min = min(Q8), Q8_max = max(Q8), Q9_min = min(Q9), Q9_max = max(Q9), Q10_min = min(Q10), Q10_max = max(Q10)) %>%
select(subject_id, Q1_min, Q1_max, Q2_min, Q2_max, Q3_min, Q3_max, Q4_min, Q4_max, Q5_min, Q5_max, Q6_min, Q6_max, Q7_min, Q7_max, Q8_min, Q8_max, Q9_min, Q9_max, Q10_min, Q10_max)
alsfrs <- alsfrs[!duplicated(alsfrs), ]
#done
write.csv(alsfrs, "alsfrs_ml.csv")
warnings()
names(alsfrs)
###Riluzole
riluzole <- read.csv("Riluzole.csv")
warnings()
View(riluzole)
riluzole <- select(riluzole, subject_id, Subject_used_Riluzole)
class(riluzole[ , 2])
colnames(riluzole) <- c("subject_id, riluzole")
class(riluzole[ , 2])
colnames(riluzole) <- c("subject_id", "riluzole")
class(riluzole[ , 2])
nrow(riluzole)
#done
write.csv(riluzole, "riluzole.csv")
riluzole <- na.omit(riluzole)
rm(sample)
source('~/ml_als/script 10.R')
?subset
###AlsHistory (Thanks to JKW)
alshistory<-read.csv("AlsHistory_r.csv")
for (i in 1:length(alshistory$subject_id))
{
if (alshistory$Site_of_Onset[i]=="Onset: Bulbar"){
alshistory$Onsetsite[i]="Bulbar"
}
if (alshistory$Site_of_Onset[i]=="Onset: Limb"){
alshistory$Onsetsite[i]="Limb"
}
if (alshistory$Site_of_Onset[i]=="Onset: Limb and Bulbar"){
alshistory$Onsetsite[i]="Limb and Bulbar"
}
if (alshistory$Site_of_Onset[i]=="Onset: Other"){
alshistory$Onsetsite[i]="Other"
}
if (alshistory$Site_of_Onset[i]=="Onset: Spine"){
alshistory$Onsetsite[i]="Limb"
}
if (!is.na(alshistory$Site_of_Onset___Bulbar[i])) {
if (alshistory$Site_of_Onset___Bulbar[i]==1) {
alshistory$Onsetsite[i]="Bulbar"
}
}
if (!is.na(alshistory$Site_of_Onset___Limb[i])) {
if (alshistory$Site_of_Onset___Limb[i]==1) {
alshistory$Onsetsite[i]="Limb"
}
}
if (!is.na(alshistory$Site_of_Onset___Bulbar[i]) & !is.na(alshistory$Site_of_Onset___Limb[i])){
if (alshistory$Site_of_Onset___Bulbar[i]==1 & alshistory$Site_of_Onset___Limb[i]==1) {
alshistory$Onsetsite[i]="Limb and Bulbar"
}
}
}
alshistory$Onsetsite <- factor(alshistory$Onsetsite)
#select onset site, Onset Delta, Diagnosis Delta
alshistory <- subset(alshistory, subset=!is.na(Onsetsite),select=c(subject_id, Onsetsite,Onset_Delta,Diagnosis_Delta))
View(alshistory)
source('~/ml_als/script 10.R')
#done
write.csv(riluzole, "riluzole_ml.csv")
#done (NA remains in Onset_Delta, Diagnosis Delta)
write.csv(alshistory, "alshistory_ml.csv")
###demographics
demographics <- read.csv("demographics.csv")
class(demographics$Sex)
for (i in 1:nrow(demographics)) {
if (!is.na(demographics$Date_of_Birth[i])) {
age[i] <- -demographics$Date_of_Birth[i] / 365.25
}
}
for (i in 1:nrow(demographics)) {
if (!is.na(demographics$Date_of_Birth[i])) {
demographics$Age[i] <- -demographics$Date_of_Birth[i] / 365.25
}
}
demographics <- select(demographics, Age, Sex)
demographics <- read.csv("demographics.csv")
for (i in 1:nrow(demographics)) {
if (!is.na(demographics$Date_of_Birth[i])) {
demographics$Age[i] <- -demographics$Date_of_Birth[i] / 365.25
}
}
demographics <- select(demographics, subject_id, Age, Sex)
demographics_ml <- na.omit(demographics)
demographics <- na.omit(demographics)
rm(demographics_ml)
##done (demographics : Age, Sex)
write.csv(demographics, "demographics_ml.csv")
View(alshistory)
View(riluzole)
riluzole <- read.csv("Riluzole.csv")
riluzole <- select(riluzole, subject_id, Subject_used_Riluzole)
colnames(riluzole) <- c("subject_id", "riluzole")
View(riluzole)
riluzole <- read.csv("Riluzole.csv")
riluzole <- select(riluzole, subject_id, Subject_used_Riluzole)
colnames(riluzole) <- c("subject_id", "riluzole")
source('~/ml_als/script 10.R')
###vitalsigns
vitalsigns <- read.csv("VitalSigns.csv")
source('~/ml_als/script 10.R')
source('~/ml_als/script 10.R')
###vitalsigns
vital <- read.csv("VitalSigns.csv")
sample <- vital[1:13, ]
rm(vitalsigns)
sample <- sample %>%
group_by(subject_id) %>%
summarize(rank = rank(Vital_Signs_Delta)) %>%
select(subject_id, Height, Weight, Blood_Pressure_Diastolic, Blood_Pressure_Systolic, Pulse, Respiratory_Rate, Temperature, Vital_Signs_Delta, rank)
sample <- sample %>%
group_by(subject_id) %>%
summarize(rank(Vital_Signs_Delta)) %>%
select(subject_id, Height, Weight, Blood_Pressure_Diastolic, Blood_Pressure_Systolic, Pulse, Respiratory_Rate, Temperature, Vital_Signs_Delta, rank)
#------------------------------------------
sample <- vital[1:23, ]
sample <- sample %>%
group_by(subject_id) %>%
mutate(rank = rank(Vital_Signs_Delta)) %>%
select(subject_id, Height, Weight, Blood_Pressure_Diastolic, Blood_Pressure_Systolic, Pulse, Respiratory_Rate, Temperature, Vital_Signs_Delta, rank)
View(sample)
sample <- vital[1:23, ]
sample <- sample %>%
group_by(subject_id) %>%
summarise(n = n()) %>%
mutate(rank = rank(Vital_Signs_Delta)) %>%
select(subject_id, Height, Weight, Blood_Pressure_Diastolic, Blood_Pressure_Systolic, Pulse, Respiratory_Rate, Temperature, Vital_Signs_Delta, rank)
sample <- sample %>%
group_by(subject_id) %>%
summarise(n = n())
View(sample)
sample <- vital[1:23, ]
sample <- sample %>%
group_by(subject_id) %>%
mutate(n = n())
sample <- vital[1:23, ]
sample <- sample %>%
group_by(subject_id) %>%
mutate(n = n()) %>%
mutate(rank = rank(Vital_Signs_Delta)) %>%
select(subject_id, Height, Weight, Blood_Pressure_Diastolic, Blood_Pressure_Systolic, Pulse, Respiratory_Rate, Temperature, Vital_Signs_Delta, rank)
sample <- vital[1:23, ]
sample <- sample %>%
group_by(subject_id) %>%
mutate(n = n()) %>%
mutate(rank = rank(Vital_Signs_Delta)) %>%
select(subject_id, Height, Weight, Blood_Pressure_Diastolic, Blood_Pressure_Systolic, Pulse, Respiratory_Rate, Temperature, Vital_Signs_Delta, rank, n)
sample <- vital[1:23, ]
sample <- sample %>%
group_by(subject_id) %>%
mutate(n = n()) %>%
mutate(rank = rank(Vital_Signs_Delta, na.rm = TRUE)) %>%
select(subject_id, Height, Weight, Blood_Pressure_Diastolic, Blood_Pressure_Systolic, Pulse, Respiratory_Rate, Temperature, Vital_Signs_Delta, rank, n)
sample <- vital[1:23, ]
sample <- sample %>%
group_by(subject_id) %>%
mutate(n = n()) %>%
mutate(rank = rank(Vital_Signs_Delta)) %>%
mutate(reverse_rank = rank(-Vital_Signs_Delta)) %>%
select(subject_id, Height, Weight, Blood_Pressure_Diastolic, Blood_Pressure_Systolic, Pulse, Respiratory_Rate, Temperature, Vital_Signs_Delta, rank, reverse_rank, n)
vital_weight <- vital %>%
select(subject_id, Weight, Vital_Signs_Delta) %>%
omit.na %>%
group_by(subject_id) %>%
mutate(n = n()) %>%
mutate(rank = rank(Vital_Signs_Delta)) %>%
mutate(reverse_rank = rank(-Vital_Signs_Delta))
vital_weight <- vital %>%
select(subject_id, Weight, Vital_Signs_Delta) %>%
na.omit() %>%
group_by(subject_id) %>%
mutate(n = n()) %>%
mutate(rank = rank(Vital_Signs_Delta)) %>%
mutate(reverse_rank = rank(-Vital_Signs_Delta))
View(vital_weight)
#weight
vital_weight <- vital %>%
select(subject_id, Weight, Vital_Signs_Delta) %>%
filter(Vital_Signs_Delta >=0 & Vital_Signs_Delta <=90)
na.omit() %>%
group_by(subject_id) %>%
mutate(n = n()) %>%
mutate(rank = rank(Vital_Signs_Delta)) %>%
mutate(reverse_rank = rank(-Vital_Signs_Delta))
#weight
vital_weight <- vital %>%
select(subject_id, Weight, Vital_Signs_Delta) %>%
filter(Vital_Signs_Delta >=0 & Vital_Signs_Delta <=90) %>%
na.omit() %>%
group_by(subject_id) %>%
mutate(n = n()) %>%
mutate(rank = rank(Vital_Signs_Delta)) %>%
mutate(reverse_rank = rank(-Vital_Signs_Delta))
vital_weight <- vital %>%
select(subject_id, Weight, Vital_Signs_Delta) %>%
filter(Vital_Signs_Delta >=0 & Vital_Signs_Delta <=90) %>%
na.omit() %>%
group_by(subject_id) %>%
mutate(n = n()) %>%
filter(!(n == 1)) %>%
mutate(rank = rank(Vital_Signs_Delta)) %>%
mutate(reverse_rank = rank(-Vital_Signs_Delta))
vital_initial_weight <- vital_weight %>%
filter(n == 1) %>%
mutate(initial_weight = weight) %>%
select(subject_id, initial_weight)
vital_initial_weight <- vital_weight %>%
filter(n == 1) %>%
mutate(initial_weight = Weight) %>%
select(subject_id, initial_weight)
View(vital_initial_weight)
vital_initial_weight <- vital_weight %>%
filter(rank == 1) %>%
mutate(initial_weight = Weight) %>%
select(subject_id, initial_weight)
vital_last_weight <- vital_weight %>%
filter(reverse_rank == 1) %>%
mutate(last_weight = Weight) %>%
select(subject_id, last_weight)
vital_two_weights <- left_join(vital_initial_weight, vital_last_weight, by ="subject_id")
rm(vital_initial_weight)
rm(vital_last_weight)
source('~/ml_als/script 10.R')
View(vital_two_weights)
vital_weight <- vital_two_weights %>%
mutate(weight_difference_ratio = (initial_weight - last_weight) / initial_weight) %>%
select(subject_id, initial_weight, weight_difference_ratio)
rm(vital_two_weights)
View(vital_weight)
source('~/ml_als/script 10.R')
#height
vital_height <- summarize(group_by(vital,subject_id), height = mean(Height,na.rm=TRUE))
View(vital_weight)
View(vital_height)
source('~/ml_als/script 10.R')
View(vital)
vitalsigns <- read.csv("VitalSigns.csv")
vital_height <- vitalsigns %>%
select(subject_id, Height) %>%
summarize(group_by(vital,subject_id), height = mean(Height, na.rm=TRUE))
vitalsigns <- read.csv("VitalSigns.csv")
vital_height <- vitalsigns %>%
select(subject_id, Height) %>%
group_by(subject)id %>%
summarize(height = mean(Height, na.rm=TRUE))
vitalsigns <- read.csv("VitalSigns.csv")
vital_height <- vitalsigns %>%
select(subject_id, Height) %>%
group_by(subject_id) %>%
summarize(height = mean(Height, na.rm=TRUE))
View(vital_height)
vitalsigns <- read.csv("VitalSigns.csv")
vital_height <- vitalsigns %>%
select(subject_id, Height) %>%
group_by(subject_id) %>%
summarize(height = mean(Height, na.rm=TRUE)) %>%
complete.cases()
vitalsigns <- read.csv("VitalSigns.csv")
vital_height <- vitalsigns %>%
select(subject_id, Height) %>%
group_by(subject_id) %>%
summarize(height = mean(Height, na.rm=TRUE)) %>%
filter(!is.nan(height))
source('~/ml_als/script 10.R')
#temperature
vital_temperature <- vitalsigns %>%
select(subject_id, Temperature) %>%
group_by(subject_id) %>%
summarize(temperature = mean(Temperature, na.rm=TRUE)) %>%
filter(!is.nan(temperature))
source('~/ml_als/script 10.R')
vital <- filter(vitalsigns, Vital_Signs_Delta >= 0 & Vital_Signs_Delta <= 90)
#weight to kg, height to cm (thanks to JKW)
vital$Weight[vital$Weight_Units=="Pounds"] <- vital$Weight[vital$Weight_Units=="Pounds"] * 0.453592
vital$Height[vital$Height_Units=="Inches"] <- vital$Height[vital$Height_Units=="Inches"] * 2.54
#diastolic, systolic pressure
for (i in 1:nrow(vital)) {
if(!is.na(vital$Supine_BP_Diastolic[i])) {
vital$Blood_Pressure_Diastolic[i] <- (vital$Supine_BP_Diastolic[i] + vital$Standing_BP_Diastolic[i]) / 2
vital$Blood_Pressure_Systolic[i] <- (vital$Supine_BP_Systolic[i] + vital$Standing_BP_Systolic[i]) / 2
vital$Pulse[i] <- ( vital$Supine_Pulse[i] + vital$Standing_Pulse[i] ) / 2
}
}
vital_pressure <- select(vital, subject_id, Blood_Pressure_Diastolic, Blood_Pressure_Systolic, Pulse, Vital_Signs_Delta)
View(vital_pressure)
source('~/ml_als/script 10.R')
vital_pressure <- select(vital, subject_id, Blood_Pressure_Diastolic, Blood_Pressure_Systolic, Pulse)
vital_pressure <- vital_pressure %>%
group_by(subject_id) %>%
summarize(diastolic_p = mean(Blood_Pressure_Diastolic, na.rm=TRUE),
systolic_p = mean(Blood_Pressure_Systolic, na.rm=TRUE),
heart_rate = mean(Pulse, na.rm=TRUE))
View(vital_pressure)
vital_respiratory_rate <- vitalsigns %>%
select(subject_id, Respiratory_Rate) %>%
group_by(subject_id) %>%
summarize(respiratory_rate = mean(TRespiratory_Rate, na.rm=TRUE))
#respiratory rate
vital_respiratory_rate <- vitalsigns %>%
select(subject_id, Respiratory_Rate) %>%
group_by(subject_id) %>%
summarize(respiratory_rate = mean(Respiratory_Rate, na.rm=TRUE))
View(vital_respiratory_rate)
#respiratory rate
vital_respiratory_rate <- vitalsigns %>%
select(subject_id, Respiratory_Rate) %>%
group_by(subject_id) %>%
summarize(respiratory_rate = mean(Respiratory_Rate, na.rm=TRUE)) %>%
filter(!is.nan(respiratory_rate))
source('~/ml_als/script 10.R')
#done(vitalsigns : height, initial_weight, weight_difference_ratio, diastolic_p, systolic_p, heart_rate, respiratory_rate, temperature)
rm(vital)
rm(vitalsigns)
write.csv(vital_height, "vital_height_ml.csv")
write.csv(vital_pressure, "vital_pressure_ml.csv")
write.csv(vital_respiratory_rate, "vital_respiratory_rate_ml.csv")
write.csv(vital_temperature, "vital_temperature_ml.csv")
write.csv(vital_weight, "vital_weight_ml.csv")
source('~/ml_als/script 10.R')
rm(sample)
###FVC
fvc <- read.csv("Fvc.csv")
exp <- select(fvc, subject_id, Subject_Normal)
unique(exp$subject_id)
length(unique(exp$subject_id))
exp <- na.omit(exp)
length(unique(exp$subject_id))
source('~/ml_als/script 10.R')
drop(exp)
rm(exp)
rm(fvc)
rm(vitalsigns)
alsfrs.w <- read.csv("alsfrs.w.csv")
rownames(alsfrs.w) <- alsfrs.w[, 1]
alsfrs.w[, 1] <- NULL
rel.err.diff <- 0
#calculation of relative errors of Weibull and linear
library(minpack.lm)
for (i in 2:nrow(alsfrs.w)) {
x <- alsfrs.w[1, ]
y <- alsfrs.w[i, ]
x <- x[!is.na(y)]
y <- y[!is.na(y)]
x <- x+1
fit.w <- nlsLM(y ~ A*exp(1)^(-( ((c^2) * x) ^ b )), start = list(A = 40, c= 1, b = 0.1), control = nls.lm.control(maxiter = 100))
rmse.w <- sqrt( fit.w$m$deviance() / length(x) )
fit.l <- lm(y ~ x)
res.l <- summary(fit.l)$residuals
rmse.l <- sqrt(sum(res.l^2)/length(x))
rel.err.w <- rmse.w / sd(y)
rel.err.l <- rmse.l / sd(y)
rel.err.diff[i] <- rel.err.l - rel.err.w
}
#labeling based on density plot of relative error difference
library(dplyr)
r.e.df <- data.frame(cbind(row.names(alsfrs.w), rel.err.diff))
r.e.df <- r.e.df[-1, ]
r.e.df[,2] <- rel.err.diff[-1]
r.e.df <- filter(r.e.df, rel.err.diff > -2)
boxplot(r.e.df[,2])
plot(density(r.e.df[,2]), main = "relative error difference (linear - Weibull)")
summary(r.e.df[,2])
abline(v=0.08, col = "red")
abline(v=-0.05, col = "blue")
label <- rep("W", nrow(alsfrs.w))
label[1] <- NA
for(i in 2:nrow(alsfrs.w)) {
if (rel.err.diff[i] > 0.08) {
label[i] <- "W"
} else if (rel.err.diff[i] <= 0.08 & rel.err.diff[i] > -0.05) {
label[i] <- "E"
} else {
label[i] <- "L"
}
}
table(label)
alsfrs.w <- read.csv("alsfrs.w.csv")
rownames(alsfrs.w) <- alsfrs.w[, 1]
alsfrs.w[, 1] <- NULL
rel.err.diff <- 0
#calculation of relative errors of Weibull and linear
library(minpack.lm)
for (i in 2:nrow(alsfrs.w)) {
x <- alsfrs.w[1, ]
y <- alsfrs.w[i, ]
x <- x[!is.na(y)]
y <- y[!is.na(y)]
x <- x+1
fit.w <- nlsLM(y ~ A*exp(1)^(-( ((c^2) * x) ^ b )), start = list(A = 40, c= 1, b = 0.1), control = nls.lm.control(maxiter = 100))
rmse.w <- sqrt( fit.w$m$deviance() / length(x) )
fit.l <- lm(y ~ x)
res.l <- summary(fit.l)$residuals
rmse.l <- sqrt(sum(res.l^2)/length(x))
rel.err.w <- rmse.w / sd(y)
rel.err.l <- rmse.l / sd(y)
rel.err.diff[i] <- rel.err.l - rel.err.w
}
#labeling based on density plot of relative error difference
library(dplyr)
r.e.df <- data.frame(cbind(row.names(alsfrs.w), rel.err.diff))
r.e.df <- r.e.df[-1, ]
r.e.df[,2] <- rel.err.diff[-1]
r.e.df <- filter(r.e.df, rel.err.diff > -2)
boxplot(r.e.df[,2])
plot(density(r.e.df[,2]), main = "relative error difference (linear - Weibull)")
summary(r.e.df[,2])
abline(v=0.08, col = "red")
abline(v=-0.05, col = "blue")
label <- rep("W", nrow(alsfrs.w))
label[1] <- NA
for(i in 2:nrow(alsfrs.w)) {
if (rel.err.diff[i] > 0.08) {
label[i] <- "W"
} else if (rel.err.diff[i] <= 0.08 & rel.err.diff[i] > -0.05) {
label[i] <- "E"
} else {
label[i] <- "L"
}
}
table(label)
alsfrs_label <- cbind(alsfrs.w, label)
View(alsfrs_label)
alsfrs_label <- mutate(subject_id = row.names(alsfrs.w))
alsfrs_label <- mutate(alsfrs_label, subject_id = row.names(alsfrs.w))
alsfrs_label <- alsfrs_label[-1, ]
class(vital_height$subject_id)
for (i in 2:nrow(alsfrs_label)) {
subject_id[i] <- as.integer(sub("^X", "", subjet_id[i]))
}
for (i in 1:nrow(alsfrs_label)) {
alsfrs_label$subject_id[i] <- as.integer(sub("^X", "", alsfrs_label$subject_id[i]))
}
alsfrs_label <- select(alsfrs_label, subject_id, label)
View(alsfrs_label)
?randomForest
library(randomForest)
?randomForest
?rfImpute
complete_data <- left_join(alsfrs_label, alsfrs, by = "subject_id") %>%
left_join(alshistory, by = "subject_id") %>%
left_join(demographics, by = "subject_id") %>%
left_join(riluzole, by = "subject_id") %>%
left_join(vital_height, by = "subject_id") %>%
left_join(vital_pressure, by = "subject_id") %>%
left_join(vital_respiratory_rate, by = "subject_id") %>%
left_join(vital_temperature, by = "subject_id") %>%
left_join(vital_weight, by = "subject_id")
class(alshistory$subject_id)
class(demographics$subject_id)
class(vital_weight$subject_id)
class(riluzole$subject_id)
class(vital_height$subject_id)
class(vital_pressure$subject_id)
class(vital_respiratory_rate$subject_id)
class(vital_temperature$subject_id)
class(alsfrs$subject_id)
class(alsfrs_label$subject_id)
alsfrs_label$subject_id <- as.integer(alsfrs_label$subject_id)
class(alsfrs_label$subject_id)
complete_data <- left_join(alsfrs_label, alsfrs, by = "subject_id") %>%
left_join(alshistory, by = "subject_id") %>%
left_join(demographics, by = "subject_id") %>%
left_join(riluzole, by = "subject_id") %>%
left_join(vital_height, by = "subject_id") %>%
left_join(vital_pressure, by = "subject_id") %>%
left_join(vital_respiratory_rate, by = "subject_id") %>%
left_join(vital_temperature, by = "subject_id") %>%
left_join(vital_weight, by = "subject_id")
View(complete_data)
sample <- complete_data[, c(-1, -2)]
rm(sample)
imputed_data <- rfImpute(complete_data[, c(-1, -2)], complete_data$label)
View(imputed_data)
RFmodel <- randomForest(complete_data$label ~ ., data = imputed_data)
names(imputed_data)
RFmodel <- randomForest(complete_data$label ~ ., data = imputed_data)
imputed_data[, 1] <- NULL
complete_data$label
imputed_data <- cbind(imputed_data, label = complete_data$label)
RFmodel <- randomForest(label ~ ., data = imputed_data)
n <- nrow(imputed_data)
shuffled_df <- imputed_data[sample(n), ]
train_indices <- 1:round(0.75 * n)
train <- shuffled_df[train_indices, ]
test_indices <- (round(0.75 * n) + 1):n
test <- shuffled_df[test_indices, ]
View(train)
RFmodel <- randomForest(label ~ ., data = train)
test$label_pred <- predict(RFmodel, test, type = "class")
mean(test$label_pred == test$label)
#train / test set
n <- nrow(imputed_data)
shuffled_df <- imputed_data[sample(n), ]
train_indices <- 1:round(0.75 * n)
train <- shuffled_df[train_indices, ]
test_indices <- (round(0.75 * n) + 1):n
test <- shuffled_df[test_indices, ]
RFmodel <- randomForest(label ~ ., data = train)
test$label_pred <- predict(RFmodel, test, type = "class")
mean(test$label_pred == test$label)
